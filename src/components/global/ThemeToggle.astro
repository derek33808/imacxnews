---
---

<button class="theme-toggle" aria-label="Toggle dark mode">
  <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>
  
  <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>
</button>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--color-text);
    padding: var(--space-2);
    position: relative;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color var(--transition);
  }
  
  .theme-toggle:hover {
    color: var(--color-primary);
  }
  
  .sun-icon,
  .moon-icon {
    position: absolute;
    transition: transform 0.5s ease, opacity 0.3s ease;
  }
  
  .sun-icon {
    opacity: 1;
    transform: rotate(0deg);
  }
  
  .moon-icon {
    opacity: 0;
    transform: rotate(90deg);
  }
  
  .dark-theme .sun-icon {
    opacity: 0;
    transform: rotate(-90deg);
  }
  
  .dark-theme .moon-icon {
    opacity: 1;
    transform: rotate(0deg);
  }
</style>

<script>
  // Theme toggle functionality
  const themeToggle = document.querySelector('.theme-toggle');
  
  // Check for saved user preference
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.documentElement.classList.add('dark-theme');
  }
  
  // Handle system preference
  if (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    document.documentElement.classList.add('dark-theme');
  }
  
  // Update button state based on current theme
  if (document.documentElement.classList.contains('dark-theme')) {
    document.body.classList.add('dark-theme');
  }
  
  themeToggle.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark-theme');
    document.body.classList.toggle('dark-theme');
    
    // Save user preference
    if (document.documentElement.classList.contains('dark-theme')) {
      localStorage.setItem('theme', 'dark');
    } else {
      localStorage.setItem('theme', 'light');
    }
  });
</script>