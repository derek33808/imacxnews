---
export const prerender = false;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password - IMACX News</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    
    .container {
      background: white;
      border-radius: 16px;
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      padding: 40px;
      width: 100%;
      max-width: 500px;
    }
    
    .header {
      text-align: center;
      margin-bottom: 40px;
    }
    
    .logo {
      font-size: 32px;
      font-weight: 700;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 10px;
    }
    
    .subtitle {
      color: #6b7280;
      font-size: 16px;
      line-height: 1.6;
    }
    
    .form-group {
      margin-bottom: 25px;
    }
    
    label {
      display: block;
      color: #374151;
      font-weight: 600;
      margin-bottom: 8px;
      font-size: 14px;
    }
    
    input[type="email"] {
      width: 100%;
      padding: 14px 16px;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.2s, box-shadow 0.2s;
    }
    
    input[type="email"]:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    .email-help {
      margin-top: 6px;
      font-size: 12px;
      color: #6b7280;
    }
    
    .submit-btn {
      width: 100%;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 16px;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: transform 0.2s, box-shadow 0.2s;
      margin-bottom: 20px;
    }
    
    .submit-btn:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 8px 15px rgba(102, 126, 234, 0.3);
    }
    
    .submit-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    .loading-spinner {
      display: none;
      width: 20px;
      height: 20px;
      border: 2px solid transparent;
      border-top: 2px solid white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-right: 8px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .alert {
      padding: 12px 16px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
      line-height: 1.5;
    }
    
    .alert.error {
      background: #fef2f2;
      border: 1px solid #fecaca;
      color: #991b1b;
    }
    
    .alert.success {
      background: #f0fdf4;
      border: 1px solid #bbf7d0;
      color: #166534;
    }
    
    .info-box {
      background: #f8fafc;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 30px;
    }
    
    .info-box .icon {
      font-size: 24px;
      margin-bottom: 10px;
    }
    
    .info-box h3 {
      color: #374151;
      font-size: 18px;
      margin-bottom: 10px;
    }
    
    .info-box p {
      color: #6b7280;
      font-size: 14px;
      line-height: 1.6;
    }
    
    .back-link {
      text-align: center;
      margin-top: 20px;
    }
    
    .back-link a {
      color: #667eea;
      text-decoration: none;
      font-weight: 500;
    }
    
    .back-link a:hover {
      text-decoration: underline;
    }
    
    .security-tips {
      margin-top: 30px;
      background: #fffbeb;
      border: 1px solid #fed7aa;
      border-radius: 8px;
      padding: 20px;
    }
    
    .security-tips h4 {
      color: #92400e;
      font-size: 16px;
      margin-bottom: 12px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .security-tips ul {
      color: #92400e;
      font-size: 14px;
      line-height: 1.6;
      padding-left: 20px;
    }
    
    .security-tips li {
      margin-bottom: 6px;
    }
    
    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Main Form -->
    <div id="mainForm">
      <div class="header">
        <div class="logo">IMACX News</div>
        <div class="subtitle">Forgot your password? Don't worry, we'll help you recover your account</div>
      </div>
      
      <div class="info-box">
        <h3>Reset Instructions</h3>
        <p>Enter the email address you used when registering, and we'll send you a secure password reset link. Please check your email (including spam folder).</p>
      </div>
      
      <div id="alertContainer"></div>
      
      <form id="forgotPasswordForm">
        <div class="form-group">
          <label for="email">Email Address</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required 
            placeholder="Enter your registered email"
          />
          <div class="email-help">Enter the email address you used to register with IMACX News</div>
        </div>
        
        <button type="submit" class="submit-btn" id="submitBtn">
          <span class="loading-spinner" id="submitSpinner"></span>
          <span id="submitText">Send Reset Link</span>
        </button>
      </form>
      
      <div class="back-link">
        <a href="/auth/login">‚Üê Back to Login</a>
      </div>
      
      <div class="security-tips">
        <h4>Security Notice</h4>
        <ul>
          <li>Reset links expire after 1 hour</li>
          <li>Each request invalidates previous reset links</li>
          <li>If you don't receive an email, check your spam folder</li>
          <li>Don't reset your password on public devices</li>
          <li>For questions, contact support: service@imacxnews.com</li>
        </ul>
      </div>
    </div>
    
    <!-- Success State -->
    <div id="successState" class="hidden">
      <div class="header">
        <div class="logo">IMACX News</div>
        <div class="subtitle">Reset Request Submitted</div>
      </div>
      
      <div class="alert success">
        <strong>Request Processed</strong><br>
        If this email address is registered, you will receive a password reset email within a few minutes. Please check your email (including spam folder).
      </div>
      
      <div class="info-box">
        <h3>Next Steps</h3>
        <p>
          1. Check your email inbox (may take a few minutes)<br>
          2. Click the "Reset Password" button in the email<br>
          3. Follow the page instructions to set a new password<br>
          4. Use your new password to log into your account
        </p>
      </div>
      
      <div class="info-box" style="background: #fef3c7; border-color: #f59e0b;">
        <h3 style="color: #92400e;">Security Notice</h3>
        <p style="color: #92400e;">
          To protect user privacy, we show the same success message for all email addresses.<br>
          <strong>Only registered email addresses will actually receive reset emails.</strong><br>
          If you don't receive an email, it may be because the address is not registered or the email is in your spam folder.
        </p>
      </div>

      <button class="submit-btn" id="resendBtn" style="background: #6b7280;" disabled>
        <span id="resendText">Resend available in 60s</span>
      </button>
      
      <div class="back-link">
        <a href="/auth/login">Back to Login</a>
      </div>
    </div>
  </div>
  
  <script>
    class ForgotPasswordHandler {
      constructor() {
        this.form = document.getElementById('forgotPasswordForm');
        this.setupEventListeners();
      }
      
      setupEventListeners() {
        this.form.addEventListener('submit', (e) => this.handleSubmit(e));
      }
      
      async handleSubmit(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const email = formData.get('email').trim();
        
        // Basic validation
        if (!email) {
          this.showAlert('Please enter your email address', 'error');
          return;
        }
        
        if (!this.isValidEmail(email)) {
          this.showAlert('Please enter a valid email address', 'error');
          return;
        }
        
        await this.sendResetRequest(email);
      }
      
      async sendResetRequest(email) {
        const submitBtn = document.getElementById('submitBtn');
        const submitSpinner = document.getElementById('submitSpinner');
        const submitText = document.getElementById('submitText');
        
        // Show loading state
        submitBtn.disabled = true;
        submitSpinner.style.display = 'inline-block';
        submitText.textContent = 'Sending...';
        
        try {
          const response = await fetch('/api/auth/forgot-password', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email })
          });
          
          const data = await response.json();
          
          if (data.success) {
            this.showSuccessState();
          } else {
            this.showAlert(data.error || 'Failed to send, please try again', 'error');
          }
        } catch (error) {
          console.error('Forgot password error:', error);
          this.showAlert('Network error, please check your connection and try again', 'error');
        } finally {
          // Restore button state
          submitBtn.disabled = false;
          submitSpinner.style.display = 'none';
          submitText.textContent = 'Send Reset Link';
        }
      }
      
      showSuccessState() {
        document.getElementById('mainForm').classList.add('hidden');
        document.getElementById('successState').classList.remove('hidden');
        this.startResendCountdown();
      }
      
      startResendCountdown() {
        const resendBtn = document.getElementById('resendBtn');
        const resendText = document.getElementById('resendText');
        let countdown = 60;
        
        const timer = setInterval(() => {
          countdown--;
          resendText.textContent = `Resend available in ${countdown}s`;
          
          if (countdown <= 0) {
            clearInterval(timer);
            resendBtn.disabled = false;
            resendBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
            resendText.textContent = 'Resend Reset Link';
            
            resendBtn.onclick = () => {
              document.getElementById('successState').classList.add('hidden');
              document.getElementById('mainForm').classList.remove('hidden');
            };
          }
        }, 1000);
      }
      
      showAlert(message, type = 'error') {
        const alertContainer = document.getElementById('alertContainer');
        alertContainer.innerHTML = `
          <div class="alert ${type}">
            ${message}
          </div>
        `;
        
        // Scroll to top to show message
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }
      
      isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
      }
    }
    
    // Initialize forgot password handler
    document.addEventListener('DOMContentLoaded', () => {
      new ForgotPasswordHandler();
    });
  </script>
</body>
</html>

