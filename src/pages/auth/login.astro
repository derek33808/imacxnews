---
export const prerender = false;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - IMACX News</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    
    .container {
      background: white;
      border-radius: 16px;
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      padding: 40px;
      width: 100%;
      max-width: 500px;
    }
    
    .header {
      text-align: center;
      margin-bottom: 40px;
    }
    
    .logo {
      font-size: 32px;
      font-weight: 700;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 10px;
    }
    
    .subtitle {
      color: #6b7280;
      font-size: 16px;
      line-height: 1.6;
    }
    
    .form-group {
      margin-bottom: 25px;
    }
    
    label {
      display: block;
      color: #374151;
      font-weight: 600;
      margin-bottom: 8px;
      font-size: 14px;
    }
    
    input[type="text"], input[type="password"] {
      width: 100%;
      padding: 14px 16px;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.2s, box-shadow 0.2s;
    }
    
    input[type="text"]:focus, input[type="password"]:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    .forgot-password-link {
      text-align: right;
      margin-bottom: 25px;
    }
    
    .forgot-password-btn {
      color: #667eea;
      text-decoration: none;
      font-size: 14px;
      font-weight: 500;
      transition: color 0.2s;
    }
    
    .forgot-password-btn:hover {
      color: #5a67d8;
      text-decoration: underline;
    }
    
    .submit-btn {
      width: 100%;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 16px;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: transform 0.2s, box-shadow 0.2s;
      margin-bottom: 20px;
    }
    
    .submit-btn:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 8px 15px rgba(102, 126, 234, 0.3);
    }
    
    .submit-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    .loading-spinner {
      display: none;
      width: 20px;
      height: 20px;
      border: 2px solid transparent;
      border-top: 2px solid white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-right: 8px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .alert {
      padding: 12px 16px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
      line-height: 1.5;
    }
    
    .alert.error {
      background: #fef2f2;
      border: 1px solid #fecaca;
      color: #991b1b;
    }
    
    .alert.success {
      background: #f0fdf4;
      border: 1px solid #bbf7d0;
      color: #166534;
    }
    
    .auth-footer {
      text-align: center;
      padding-top: 25px;
      border-top: 1px solid #e5e7eb;
      margin-top: 25px;
    }
    
    .register-link {
      color: #6b7280;
      font-size: 14px;
    }
    
    .register-btn {
      color: #667eea;
      text-decoration: none;
      font-weight: 500;
      margin-left: 5px;
    }
    
    .register-btn:hover {
      text-decoration: underline;
    }
    
    .back-to-home {
      text-align: center;
      margin-top: 20px;
    }
    
    .back-to-home a {
      color: #6b7280;
      text-decoration: none;
      font-size: 14px;
    }
    
    .back-to-home a:hover {
      color: #667eea;
      text-decoration: underline;
    }
    
    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Main Login Form -->
    <div id="loginForm">
      <div class="header">
        <div class="logo">IMACX News</div>
        <div class="subtitle">Welcome back! Please log into your account</div>
      </div>
      
      <div id="alertContainer"></div>
      
      <form id="userLoginForm">
        <div class="form-group">
          <label for="userIdentifier">Username or Email</label>
          <input 
            type="text" 
            id="userIdentifier" 
            name="identifier" 
            required 
            placeholder="Enter your username or email"
          />
        </div>
        
        <div class="form-group">
          <label for="userPassword">Password</label>
          <input 
            type="password" 
            id="userPassword" 
            name="password" 
            required 
            placeholder="Enter your password"
          />
        </div>
        
        <div class="forgot-password-link">
          <a href="/auth/forgot-password" class="forgot-password-btn">Forgot Password?</a>
        </div>
        
        <button type="submit" class="submit-btn" id="submitBtn">
          <span class="loading-spinner" id="submitSpinner"></span>
          <span id="submitText">Sign In</span>
        </button>
      </form>
      
      <div class="auth-footer">
        <span class="register-link">
          Don't have an account?
          <a href="/register" class="register-btn">Sign Up Now</a>
        </span>
      </div>
      
      <div class="back-to-home">
        <a href="/">‚Üê Back to Home</a>
      </div>
    </div>
    
    <!-- Success State -->
    <div id="successState" class="hidden">
      <div class="header">
        <div class="logo">IMACX News</div>
        <div class="subtitle">Login Successful!</div>
      </div>
      
      <div class="alert success">
        <strong>üéâ Welcome back!</strong><br>
        You have successfully logged into IMACX News, redirecting to homepage...
      </div>
      
      <button class="submit-btn" id="continueBtn">
        Go to Homepage
      </button>
    </div>
  </div>
  
  <script>
    class LoginHandler {
      private form: HTMLFormElement | null;
      
      constructor() {
        this.form = document.getElementById('userLoginForm') as HTMLFormElement | null;
        this.setupEventListeners();
      }
      
      setupEventListeners() {
        this.form?.addEventListener('submit', (e) => this.handleSubmit(e));
        
        const continueBtn = document.getElementById('continueBtn');
        if (continueBtn) {
          continueBtn.addEventListener('click', () => {
            window.location.href = '/';
          });
        }
      }
      
      async handleSubmit(e: Event) {
        e.preventDefault();
        
        const formData = new FormData(e.target as HTMLFormElement);
        const identifierValue = formData.get('identifier');
        const passwordValue = formData.get('password');
        
        const data = {
          identifier: typeof identifierValue === 'string' ? identifierValue.trim() : '',
          password: typeof passwordValue === 'string' ? passwordValue : ''
        };
        
        // Basic validation
        if (!data.identifier) {
          this.showAlert('Please enter your username or email', 'error');
          return;
        }
        
        if (!data.password) {
          this.showAlert('Please enter your password', 'error');
          return;
        }
        
        await this.performLogin(data);
      }
      
      async performLogin(data: { identifier: string; password: string }) {
        const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement | null;
        const submitSpinner = document.getElementById('submitSpinner') as HTMLElement | null;
        const submitText = document.getElementById('submitText') as HTMLElement | null;
        
        // ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
        if (submitBtn) {
          submitBtn.disabled = true;
        }
        if (submitSpinner) {
          submitSpinner.style.display = 'inline-block';
        }
        if (submitText) {
          submitText.textContent = 'Signing In...';
        }
        
        try {
          const response = await fetch('/api/auth/user-login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });
          
          const result = await response.json();
          
          if (!response.ok) {
            throw new Error(result.error || 'Login failed');
          }
          
          // ÁôªÂΩïÊàêÂäü
          localStorage.removeItem('isLoggedIn'); // Ê∏ÖÈô§ÊóßÁöÑÁÆ°ÁêÜÂëòÁôªÂΩïÁä∂ÊÄÅ
          localStorage.removeItem('username');   // Ê∏ÖÈô§ÊóßÁöÑÁÆ°ÁêÜÂëòÁî®Êà∑Âêç
          localStorage.setItem('currentUser', JSON.stringify(result.user));
          localStorage.setItem('lastStatusCheck', Date.now().toString());
          
          console.log('‚úÖ User logged in successfully:', result.user);
          
          // ÊòæÁ§∫ÊàêÂäüÁä∂ÊÄÅ
          this.showSuccessState();
          
          // 3ÁßíÂêéËá™Âä®Ë∑≥ËΩ¨
          setTimeout(() => {
            window.location.href = '/';
          }, 3000);
          
        } catch (error: any) {
          console.error('Login error:', error);
          this.showAlert(error.message || 'Login failed, please try again', 'error');
        } finally {
          // ÊÅ¢Â§çÊåâÈíÆÁä∂ÊÄÅ
          if (submitBtn) {
            submitBtn.disabled = false;
          }
          if (submitSpinner) {
            submitSpinner.style.display = 'none';
          }
          if (submitText) {
            submitText.textContent = 'Sign In';
          }
        }
      }
      
      showSuccessState() {
        const loginForm = document.getElementById('loginForm');
        const successState = document.getElementById('successState');
        
        loginForm?.classList.add('hidden');
        successState?.classList.remove('hidden');
      }
      
      showAlert(message: string, type = 'error') {
        const alertContainer = document.getElementById('alertContainer');
        if (alertContainer) {
          alertContainer.innerHTML = `
            <div class="alert ${type}">
              ${message}
            </div>
          `;
        }
        
        // ÊªöÂä®Âà∞È°∂ÈÉ®ÊòæÁ§∫Ê∂àÊÅØ
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }
    }
    
    // ÂàùÂßãÂåñÁôªÂΩïÂ§ÑÁêÜÂô®
    document.addEventListener('DOMContentLoaded', () => {
      new LoginHandler();
      
      // ËÅöÁÑ¶Âà∞Á¨¨‰∏Ä‰∏™ËæìÂÖ•Ê°Ü
      const firstInput = document.getElementById('userIdentifier') as HTMLInputElement | null;
      if (firstInput) {
        firstInput.focus();
      }
    });
  </script>
</body>
</html>
