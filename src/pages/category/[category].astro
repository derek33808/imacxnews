---
export const prerender = false;
import CategoryLayout from '../../layouts/CategoryLayout.astro';
import { categories, getCategoryById } from '../../data/categories';
import { createDatabaseConnection, withRetry } from '../../lib/database';

const { category } = Astro.params;

// 404 handling if category not found
const categoryInfo = getCategoryById(category);
if (!categoryInfo) {
  return Astro.redirect('/404');
}

// 强制从数据库获取分类文章
type Article = {
  id: number;
  title: string;
  slug: string;
  excerpt: string;
  content: string;
  chineseContent: string | null;
  category: string;
  image: string;
  imageAlt: string | null;
  imageCaption: string | null;
  author: string;
  publishDate: Date;
  featured: boolean;
  contentLength: number | null;
  readingTime: number | null;
  mediaType: string;
  videoUrl: string | null;
  videoPoster: string | null;
  videoDuration: number | null;
};

let initialArticles: Article[] = [];
try {
  const prisma = createDatabaseConnection();
  initialArticles = await withRetry(async () => {
    return await prisma.article.findMany({
      where: { category },
      select: {
        id: true,
        title: true,
        slug: true,
        excerpt: true,
        content: true,
        chineseContent: true,
        category: true,
        image: true,
        imageAlt: true,
        imageCaption: true,
        author: true,
        publishDate: true,
        featured: true,
        contentLength: true,
        readingTime: true,
        mediaType: true,
        videoUrl: true,
        videoPoster: true,
        videoDuration: true,
      },
      orderBy: { publishDate: 'desc' }
    });
  }, `Get articles for category: ${category}`);
} catch (e: any) {
  console.error(`数据库连接失败，无法加载分类 ${category} 的文章:`, e?.message);
  // 不再回退到静态数据，直接使用空数组
  initialArticles = [];
}
---

<CategoryLayout category={category} articles={initialArticles} />